"""Movements and uuid applied

Revision ID: 8ffba5360c22
Revises: cbda18654760
Create Date: 2025-07-24 09:18:10.984743

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ffba5360c22'
down_revision: Union[str, Sequence[str], None] = 'cbda18654760'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id', server_default=None, existing_type=sa.VARCHAR())
    op.alter_column('users', 'id',
        existing_type=sa.VARCHAR(),
        type_=sa.UUID(),
        existing_nullable=False,
        postgresql_using="id::uuid"
    )
    op.create_table('movements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('concept', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('agg_concept', sa.String(), nullable=True),
    sa.Column('extraordinary', sa.Boolean(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movements_id'), 'movements', ['id'], unique=False)
    op.create_index(op.f('ix_movements_user_id'), 'movements', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_movements_user_id'), table_name='movements')
    op.drop_index(op.f('ix_movements_id'), table_name='movements')
    op.drop_table('movements')
    op.alter_column('users', 'id', server_default=None, existing_type=sa.UUID())
    op.alter_column('users', 'id',
        existing_type=sa.UUID(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
        postgresql_using="id::text"
    )
    # ### end Alembic commands ###
